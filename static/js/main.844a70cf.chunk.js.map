{"version":3,"sources":["components/controls.js","components/output.js","App.js","reportWebVitals.js","index.js"],"names":["Controls","horinzontalLengthFunction","verticalLengthFunction","blurFunction","spreadFunction","ShadowColorFunction","BoxColorFunction","InsetFunction","Box","className","Typography","variant","gutterBottom","type","name","onChange","min","max","step","defaultValue","Checkbox","color","Output","horinzontalLengthValue","verticalLengthValue","blurValue","spreadValue","BoxColorValue","ShadowColorValue","InsetValue","copyFunction","copyValue","style","boxShadow","backgroundColor","onCopy","text","Button","App","useState","HorizontalLength","setHorizontalLength","verticalLength","setverticalLength","BlurRadius","setBlurRadius","SpreadRadius","setSpreadRadius","BoxColor","setBoxColor","ShadowColor","setShadowColor","inset","setInset","copied","setCopied","align","e","target","value","checked","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.844a70cf.chunk.js","sourcesContent":["import { Box, Typography, Checkbox } from \"@material-ui/core\";\n\nfunction Controls({\n  horinzontalLengthFunction,\n  verticalLengthFunction,\n  blurFunction,\n  spreadFunction,\n  ShadowColorFunction,\n  BoxColorFunction,\n  InsetFunction,\n}) {\n  return (\n    <Box className=\"countrols-section\">\n      <Box className=\"countrol-box\">\n        <Typography variant=\"h6\" gutterBottom>\n          Horizontal Length\n        </Typography>\n        <input\n          type=\"range\"\n          name=\"horizontalLength\"\n          onChange={horinzontalLengthFunction}\n          min=\"-200\"\n          max=\"200\"\n          step=\"1\"\n          defaultValue={10}\n        />\n      </Box>\n      <Box className=\"countrol-box\">\n        <Typography variant=\"h6\" gutterBottom>\n          Vertical Length\n        </Typography>\n        <input\n          type=\"range\"\n          name=\"verticalValue\"\n          onChange={verticalLengthFunction}\n          min=\"-200\"\n          max=\"200\"\n          step=\"1\"\n          defaultValue={10}\n        />\n      </Box>\n      <Box className=\"countrol-box\">\n        <Typography variant=\"h6\" gutterBottom>\n          Blur Radius\n        </Typography>\n        <input\n          type=\"range\"\n          name=\"blurValue\"\n          onChange={blurFunction}\n          min=\"0\"\n          max=\"300\"\n          step=\"1\"\n          defaultValue={5}\n        />\n      </Box>\n      <Box className=\"countrol-box\">\n        <Typography variant=\"h6\" gutterBottom>\n          Spread Radius\n        </Typography>\n        <input\n          type=\"range\"\n          name=\"spreadValue\"\n          onChange={spreadFunction}\n          min=\"-200\"\n          max=\"200\"\n          step=\"1\"\n          defaultValue={0}\n        />\n      </Box>\n      <Box className=\"countrol-box color-countrol-box\">\n        <Typography variant=\"h6\" gutterBottom>\n          Box color\n        </Typography>\n        <input\n          type=\"color\"\n          name=\"boxColor\"\n          onChange={BoxColorFunction}\n          defaultValue=\"#e7a61a\"\n        />\n      </Box>\n      <Box className=\"countrol-box color-countrol-box\">\n        <Typography variant=\"h6\" gutterBottom>\n          Shadow Color\n        </Typography>\n        <input\n          type=\"color\"\n          name=\"shadowColor\"\n          onChange={ShadowColorFunction}\n          defaultValue=\"#000000\"\n        />\n      </Box>\n      <Box className=\"countrol-box color-countrol-box\">\n        <Typography variant=\"h6\" gutterBottom>\n          Inset\n        </Typography>\n        <Checkbox color=\"primary\" onChange={InsetFunction} />\n      </Box>\n    </Box>\n  );\n}\n\nexport default Controls;\n","import { Fragment } from \"react\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nfunction Output({\n  horinzontalLengthValue,\n  verticalLengthValue,\n  blurValue,\n  spreadValue,\n  BoxColorValue,\n  ShadowColorValue,\n  InsetValue,\n  copyFunction,\n  copyValue,\n}) {\n  return (\n    <Fragment>\n      <Box\n        className=\"output-section\"\n        style={{\n          boxShadow: `${\n            InsetValue ? \"inset\" : \"\"\n          } ${horinzontalLengthValue}px ${verticalLengthValue}px ${blurValue}px ${spreadValue}px ${ShadowColorValue}`,\n          backgroundColor: `${BoxColorValue}`,\n        }}\n      >\n        <Typography variant=\"h6\">\n          box-shadow:\n          {`${\n            InsetValue ? \"inset\" : \"\"\n          } ${horinzontalLengthValue}px ${verticalLengthValue}px ${blurValue}px ${spreadValue}px ${ShadowColorValue}`}\n        </Typography>\n        <CopyToClipboard\n          onCopy={copyFunction}\n          text={\n            copyValue\n              ? `${\n                  InsetValue ? \"inset\" : \"\"\n                } ${horinzontalLengthValue}px ${verticalLengthValue}px ${blurValue}px ${spreadValue}px ${ShadowColorValue}`\n              : \"\"\n          }\n        >\n          <Button variant=\"contained\">Copy To clipboard</Button>\n        </CopyToClipboard>\n      </Box>\n    </Fragment>\n  );\n}\n\nexport default Output;\n","import { Fragment, useState } from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport Controls from \"./components/controls.js\";\nimport Output from \"./components/output.js\";\nimport \"./App.css\";\n\nfunction App() {\n  // horizontal length\n\n  const [HorizontalLength, setHorizontalLength] = useState(10);\n\n  const handleHorizontalLength = (e) => {\n    setHorizontalLength(e.target.value);\n  };\n\n  // vertical length\n\n  const [verticalLength, setverticalLength] = useState(10);\n\n  const handleVerticalLength = (e) => {\n    setverticalLength(e.target.value);\n  };\n\n  // blur radius\n\n  const [BlurRadius, setBlurRadius] = useState(5);\n\n  const handleBlur = (e) => {\n    setBlurRadius(e.target.value);\n  };\n\n  // spread radius\n\n  const [SpreadRadius, setSpreadRadius] = useState(0);\n\n  const handleSpread = (e) => {\n    setSpreadRadius(e.target.value);\n  };\n\n  // box color\n\n  const [BoxColor, setBoxColor] = useState(\"#e7a61a\");\n\n  const handleBoxColor = (e) => {\n    setBoxColor(e.target.value);\n  };\n\n  // shadow color\n\n  const [ShadowColor, setShadowColor] = useState(\"#000000\");\n\n  const handleShadowColor = (e) => {\n    setShadowColor(e.target.value);\n  };\n\n  // inset\n\n  const [inset, setInset] = useState(\"\");\n\n  const handleInset = (e) => {\n    setInset(e.target.checked);\n    console.log(e.target.checked);\n  };\n\n  // copy to clipboard\n\n  const [copied, setCopied] = useState(false);\n\n  const handlleCopy = () => {\n    setCopied(true);\n    console.log(\"worked\");\n  };\n\n  return (\n    <Fragment>\n      <Typography variant=\"h3\" align=\"center\" className=\"app-heading\">\n        CSS Box Shadow Generator\n      </Typography>\n      <Box className=\"generator-plate\">\n        <Controls\n          horinzontalLengthFunction={handleHorizontalLength}\n          verticalLengthFunction={handleVerticalLength}\n          blurFunction={handleBlur}\n          spreadFunction={handleSpread}\n          ShadowColorFunction={handleShadowColor}\n          BoxColorFunction={handleBoxColor}\n          InsetFunction={handleInset}\n          copyFunction={handlleCopy}\n        />\n        <Output\n          horinzontalLengthValue={HorizontalLength}\n          verticalLengthValue={verticalLength}\n          blurValue={BlurRadius}\n          spreadValue={SpreadRadius}\n          ShadowColorValue={ShadowColor}\n          BoxColorValue={BoxColor}\n          InsetValue={inset}\n          copyValue={copied}\n        />\n      </Box>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}